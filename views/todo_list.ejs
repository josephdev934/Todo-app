<%- include("partials/header") %>

<section class="relative w-full min-h-screen overflow-hidden pb-20">

  <!-- Background Video -->
  <video autoplay muted loop class="absolute inset-0 w-full h-full object-cover -z-10">
    <source src="/videos/4779866-hd_1920_1080_30fps.mp4" type="video/mp4">
    Your browser does not support the video tag.
  </video>

  <!-- Overlay Content -->
  <div class="relative z-10 w-full px-4 sm:px-8 py-10">
    <h2 class="text-3xl sm:text-4xl font-bold text-center text-black mb-8">
      <%= user.username %>'s Todo List
    </h2>

    <!-- New Todo Form -->
    <div class="max-w-xl mx-auto bg-white bg-opacity-90 backdrop-blur-md p-6 rounded-lg shadow-lg">
      <form action="/todoList" method="post">
        <label class="block mb-4 text-black font-medium">
          Todo Title
          <input type="text" name="todo[todo]" placeholder="Add a Todo" required
                 class="w-full mt-1 p-2 border rounded-md focus:outline-none focus:ring focus:border-blue-400">
        </label>

        <label class="block mb-4 text-black font-medium relative">
          Due Date
          <input type="date" name="todo[dueDate]" required
                 class="w-full mt-1 p-2 border rounded-md focus:outline-none focus:ring focus:border-blue-400">
          <span class="absolute top-full text-xs text-gray-500">*Use calendar to pick date</span>
        </label>

        <label class="block mb-4 text-black font-medium">
          Task Time
          <input type="time" name="todo[tasktime]" required
                 class="w-full mt-1 p-2 border rounded-md focus:outline-none focus:ring focus:border-blue-400">
        </label>

        <input type="submit" value="Create Todo"
               class="bg-gray-800 text-white w-full py-2 rounded hover:bg-gray-700 cursor-pointer">
      </form>
    </div>

    <!-- Todos Grid -->
    <div class="mt-12 grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
      <% newTodo.forEach((todo) => { %>
        <div class="todo-block bg-white bg-opacity-90 p-6 rounded-lg shadow-md border-l-4 border-gray-400"
             data-duedate="<%= todo.dueDate %>"
             data-duetime="<%= todo.tasktime %>">
          <span class="Completed text-xl hidden">Task Completed</span>
          
          <!-- View Mode -->
          <p class="text-gray-800 mb-1 flex justify-between items-center">
            <span>
              <strong>Task:</strong>
              <span class="task-title font-semibold text-lg"><%= todo.todo %></span>
            </span>
            <div class="checked cursor-pointer text-2xl text-green-500 relative -right-[300px]" title="Click if you have finished this task">
                  <i class="fa-solid fa-square-check"></i></div>
          </p>

          <p class="text-black-600 mb-1 bg-black-600"><strong>Due:</strong> <%= todo.dueDate %></p>
          <p class="text-gray-600 mb-1"><strong>Time:</strong> <%= todo.tasktime %></p>
          <p class="text-red-600 mb-2"><strong>Time left:</strong> <span id="countdown-<%= todo._id %>">Calculating...</span></p>
          <button onclick="showEditForm('<%= todo._id %>')" class="text-blue-600 hover:underline">‚úèÔ∏è Edit</button>

          <!-- Edit Mode -->
          <form id="edit-<%= todo._id %>"
                action="/todoList/<%= todo._id %>?_method=PUT"
                method="POST"
                class="mt-4 hidden">
            <input type="text" name="todo[todo]" value="<%= todo.todo %>" required
                   class="w-full mb-2 p-2 border rounded-md">
            <input type="date" name="todo[dueDate]" value="<%= todo.dueDate %>" required
                   class="w-full mb-2 p-2 border rounded-md">
            <input type="time" name="todo[tasktime]" value="<%= todo.tasktime %>" required
                   class="w-full mb-2 p-2 border rounded-md">
            <div class="flex gap-3 mt-2">
              <button type="submit" class="bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-500">Save</button>
              <button type="button" onclick="cancelEditForm('<%= todo._id %>')" class="bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-400">Cancel</button>
            </div>
          </form>

          <!-- Delete -->
          <form action="/todoList/<%= todo._id %>?_method=DELETE" method="POST" onsubmit="return confirm('Are you sure you want to delete this task?');">
            <button type="submit" class="mt-1 text-red-600 font-semibold hover:underline">üóëÔ∏è Delete</button>
          </form>
        </div>
      <% }) %>
    </div>
  </div>
</section>

<!-- Alarm -->
<audio id="alarmSound" src="/sounds/iPhone Radar AlarmRingtone (Apple Sound) - Sound Effect for Editing.mp3" preload="auto"></audio>
<div id="alarmControls" class="fixed bottom-10 left-1/2 transform -translate-x-1/2 hidden z-50 space-x-4">
  <button id="stopAlarmBtn" onclick="stopAlarm()" class="bg-red-600 text-white px-4 py-2 rounded shadow">üö® Stop</button>
  <button id="snoozeBtn" onclick="snoozeAlarm()" class="bg-yellow-500 text-white px-4 py-2 rounded shadow">üò¥ Snooze 5 min</button>
</div>

<!--Styles  -->
<style>
  .classy {
    text-decoration: line-through;
    color: gray;
  }
  .complete {
    display: block;
    color: green;
    text-decoration: none;
  }
  .Done {
    background-color: rgb(133, 255, 133);
  }
  .gray {
    color: gray;
  }
</style>

<!-- Scripts -->
<script>
  function showEditForm(id) {
    document.getElementById("view-" + id).style.display = "none";
    document.getElementById("edit-" + id).style.display = "block";
  }

  function cancelEditForm(id) {
    document.getElementById("edit-" + id).style.display = "none";
    document.getElementById("view-" + id).style.display = "block";
  }

  const alarmSound = document.getElementById("alarmSound");
  let alarmTimeout = null;

  function playAlarm() {
    alarmSound.loop = true;
    alarmSound.play();
    document.getElementById("alarmControls").style.display = "flex";
    if (navigator.vibrate) {
      navigator.vibrate([500, 500, 500, 500]);
    }
    alarmTimeout = setTimeout(stopAlarm, 120000);
  }

  function stopAlarm() {
    alarmSound.pause();
    alarmSound.currentTime = 0;
    document.getElementById("alarmControls").style.display = "none";
    clearTimeout(alarmTimeout);
    if (navigator.vibrate) navigator.vibrate(0);
  }

  function snoozeAlarm() {
    stopAlarm();
    setTimeout(playAlarm, 5 * 60 * 1000);
  }

  function checkAlarms() {
    const todos = document.querySelectorAll(".todo-block");

    todos.forEach(todo => {
      const dueDate = todo.getAttribute("data-duedate");
      const dueTime = todo.getAttribute("data-duetime");
      const countdown = todo.querySelector("span[id^='countdown-']");

      if (!dueDate || !dueTime) return;

      const dueDateTime = new Date(`${dueDate}T${dueTime}`);
      const now = new Date();
      const diff = dueDateTime - now;

      if (countdown) {
        if (diff > 0) {
          const mins = Math.floor(diff / 60000);
          const secs = Math.floor((diff % 60000) / 1000);
          countdown.innerText = `${mins} min ${secs} sec`;
        } else {
          countdown.innerText = `‚è∞ Due now`;
        }
      }

      if (diff > 0 && diff <= 60000 && !todo.dataset.alarmSet) {
        todo.dataset.alarmSet = true;
        setTimeout(() => {
          alert("‚è∞ Your task is due now!");
          playAlarm();
        }, diff);
      }
    });
  }

  checkAlarms();
  setInterval(checkAlarms, 1000);

  //  Clicking the check icon shows the "Task Completed" message and strikes through the task title.
  document.querySelectorAll(".checked").forEach(function (checkedIcon) {
    checkedIcon.addEventListener("click", function () {
      const todoBlock = checkedIcon.closest(".todo-block");
      if (todoBlock) {
        todoBlock.classList.toggle("Done")
        // Show "Task Completed" message and turns the check button gray
        const Checked = todoBlock.querySelector(".checked");
        if(Checked){
          Checked.classList.toggle("gray")
        }
        const completedMsg = todoBlock.querySelector(".Completed");
        if (completedMsg) {
          completedMsg.classList.toggle("complete");
        }

        // Applying strikethrough to task title (using the classy class)
        const taskTitle = todoBlock.querySelector(".task-title");
        if (taskTitle) {
          taskTitle.classList.toggle("classy");
        }
      }
    });
  });
</script>

<%- include("partials/footer") %>
